========================================================== 
RACCOURCI
 ---------------------------------------------------------
 prop
 ctor
 CTRL E,C => comment

========================================================== 
 SQL LITE
 ---------------------------------------------------------
 choix :
 https://docs.microsoft.com/fr-fr/xamarin/android/data-cloud/data-access/introduction

 https://blogs.infinitesquare.com/posts/mobile/bonnes-pratiques-pour-gerer-une-base-de-donnees-sqlite-dans-vos-apps-xamarin
   Microsoft.Data.Sqlite
   SQLite.NET
   EFCore
 creation :
 https://blogs.infinitesquare.com/posts/windows/comment-gerer-les-montees-de-version-du-stockage-sqlite-des-applications-windows-uwp-ou-non

 COMPLETE
 9781785880537-XAMARIN_CROSSPLATFORM_DEVELOPMENT_COOKBOOK.pdf
 https://code.tutsplus.com/tutorials/an-introduction-to-xamarinforms-and-sqlite--cms-23020
 TODO ex :https://docs.microsoft.com/fr-fr/xamarin/xamarin-forms/app-fundamentals/databases
 CRUD :
 https://msdn.microsoft.com/fr-fr/magazine/mt736454.aspx

========================================================== 
 Timer
 ---------------------------------------------------------
 Device.StartTimer(new TimeSpan(0, 0, 0, 0, 1000), RefreshListes);
private bool RefreshListes()
        {
            Console.WriteLine(  "OK: "+count++ );
            return true; // or false to stop
        }


OU


class TimerExampleState {
    public int counter = 0;
    public Timer tmr;
}

    TimerExampleState s = new TimerExampleState();

    // Create the delegate that invokes methods for the timer.
    TimerCallback timerDelegate = new TimerCallback(CheckStatus);

    // Create a timer that waits one second, then invokes every second.
    Timer timer = new Timer(timerDelegate, s, 1000, 1000);
    

		https://stackoverflow.com/questions/37203371/timer-in-xamarin-forms
		https://developer.xamarin.com/api/type/System.Threading.Timer/
==========================================================
RestService
----------------------------------------------------------
var response = await httpClientAlerte.GetAsync(uri);
 if (response.IsSuccessStatusCode)
 {
       var content = await response.Content.ReadAsStringAsync();
       rootObject = JsonConvert.DeserializeObject<RootObject>(content);

==========================================================
ListView
----------------------------------------------------------
<ListView x:Name="MyListView"
            ItemsSource="{Binding ListeAlerte}"

public AlerteListViewPage()
{
    InitializeComponent();
    vm = new MainPageViewModel(this);
	BindingContext = vm;	
			
 public MainPageViewModel( Page page)
{
    ListeAlerte = DataSourceMock1.GetAlerte();

==========================================================
ListView Change
----------------------------------------------------------
	ObservableCollection as list (to be inform for add/delete)
	+ 
	BourseAction : INotifyPropertyChanged avec dans le set   OnPropertyChanged("Cours");
==========================================================
REgHEx or Split
----------------------------------------------------------
          /*  var doubleArray = Regex.Split(sentence, @"^[-+]?[^0-9\,]+").Where(c => c != "." && c.Trim() != "");
            var doubleArray2 = Regex.Split(sentence, @"^[-+]?[0-9]*\,?[0-9]").Where(c => c != "." && c.Trim() != "");
            */
            //var res = doubleArray2[0];
            //float res = (float) Convert.ToDouble(doubleArray2.Take(0));

==========================================================
REgHEx or Split
----------------------------------------------------------

https://blog.xamarin.com/simplifying-events-with-commanding/

==========================================================
Presentation
----------------------------------------------------------

 <Label Text="{Binding Year, StringFormat='The year is {0}'}" />